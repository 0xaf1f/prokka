                               Prokka User Manual

   Author
           Torsten Seemann <torsten.seemann@monash.edu>

   Institute
           Victorian Bioinformatics Consortium
           <http://www.bioinformatics.net.au/>

   Last updated
           17 June 2012

Introduction

   Whole genome annotation is the process of identifying features of interest
   in a set of genomic DNA sequences, and labelling them with useful
   information. Prokka is a software tool to annotate bacterial, archaeal and
   viral genomes very rapidly, and produce output files that require only
   minor tweaking to submit to Genbank/ENA/DDBJ.

Why use Prokka?

   It is fast!
           A typical 4 Mbp bacterial genome will be annotated in 5 minutes on
           a typical quad-core desktop. The more CPU cores you have, the
           faster it will go.

   Uses freely accessible tools
           Prokka is written in Perl and only uses core modules. Although
           various external tools are required, Prokka checks for them and
           lets you know what is missing.

   Simple to run
           Using Prokka can be as simple as typing "prokka contigs.fasta".
           You are not forced to wade through command line options before
           getting your first result.

   Bundled databases
           Prokka comes with custom BLAST and HMMER databases, so there is no
           need to have any installed, but power users can add their own.

   Smooth Genbank submission
           Prokka produces a template ASN1 file (Seq-Entry:), which you can
           edit with Sequin to create a Seq-Submt: to submit to
           NCBI/ENA/DDBJ.

   Clean interface
           Prokka is neatly packaged, with no hard-coded directories.
           Everything can be controlled via command line options. It is
           trivial to add it to your private genomics pipeline, including
           [1]Galaxy.

Installation

  Download

   Download the latest prokka-1.x.tar.gz archive from
   [2]http://www.bioinformatics.net.au/

  Extract

    1. Choose somewhere to put it, for example: /opt
    2. Untar it: sudo tar -C /opt prokka-1.x.tar.gz
    3. Check it is there: ls /opt/prokka-1.x/

  Add to PATH

   Add the following line to your $HOME/.bashrc file, or to
   /etc/profile.d/prokka.sh to make it available to all users:

 export PATH=$PATH:/opt/prokka-1.x

  Install dependencies

   Consult the [3]list of dependencies.

  Fix RNAmmer bug

   RNAmmer was written when HMMER 2.x was the latest release. Since them,
   HMMER 3.x has been released, and uses the same executable binary names.
   Prokka needs HMMER3 and RNAmmer (and hence HMMER2) so you need to edit
   your RNAmmer script to explicitly point your HMMER2 binary instead of
   using the HMMER3 binary which is more likely to be in your PATH first.

   Type which rnammer to find the script, and then edit it with your
   favourite editor. Find the following lines at the top:

 if ( $uname eq "Linux" ) {
 #       $HMMSEARCH_BINARY = "/usr/cbs/bio/bin/linux64/hmmsearch";    # OLD
         $HMMSEARCH_BINARY = "/path/to/my/hmmer-2.3.2/bin/hmmsearch"; # NEW (yours)
 }

   As you can see, I have commented out the original part, and replaced it
   with the location of my HMMER2 hmmsearch tool, so it doesn't run the
   HMMER3 one. You need to ensure HMMER3 is in your PATH before the old
   HMMER2 too.

  Test

   Type prokka --version and you should see an output like prokka 1.x.

Invoking Prokka

  Beginner

 # Vanilla (but with free toppings)
 % prokka contigs.fa

   After some minutes, it will be finished, and explain where to find your
   result files.

  Moderate

 # Choose the names of the output files
 % prokka --outdir mydir --prefix mygenome contigs.fa

 # Visualize it in Artemis
 % art mydir/mygenome.gff


  Expert

 # It's not just for bacteria, people
 % prokka --kingdom Archaea --outdir mydir --genus Pyrococcus --locustag PYCC

 # Search for my favourite gene
 % exonerate --bestn 1 zetatoxin.fasta mydir/PYCC_06072012.faa | less


  Wizard

 # Watch and learn
 % prokka --outdir mydir --locustag EHEC --proteins NewToxins.faa --evalue 0.001 --gram neg --addgenes contigs.fa

 # Check to see if anything went really wrong
 % less mydir/EHEC_06072012.err

 # Add final details using Sequin
 % sequin mydir/mygenome.sqn


Output Files

   .gff
           This is the master annotation in GFF3 format, containing both
           sequences and annotations. It can be viewed directly in [4]Artemis
           or [5]IGV.

   .gbk
           This is a [6]standard Genbank file derived from the master .gff.
           If the input to prokka was a multi-FASTA, then this will be a
           multi-Genbank, with one record for each sequence.

   .fna
           Nucleotide FASTA file of the input contig sequences.

   .faa
           Protein FASTA file of the translated CDS sequences.

   .ffn
           Nucleotide FASTA file of all the annotated sequences, not just
           CDS.

   .sqn
           An ASN1 format "Sequin" file for submission to Genbank. It needs
           to be edited to set the correct taxonomy, authors, related
           publication etc.

   .fsa
           Nucleotide FASTA file of the input contig sequences, used by
           "tbl2asn" to create the .sqn file. It is mostly the same as the
           .fna file, but with extra Sequin tags in the sequence description
           lines.

   .tbl
           Feature Table file, used by "tbl2asn" to create the .sqn file.

   .err
           Unacceptable annotations - the NCBI discrepancy report.

   .log
           Contains all the output that Prokka produced during its run. This
           is a record of what settings you used, even if the --quiet option
           was enabled.

Options

 General:
   --help            This help
   --version         Print version and exit
   --docs            Show full manual/documentation
   --listdb          List all configured databases
   --citation        Print citation details for this software
   --quiet           No screen output (default OFF)
 Outputs:
   --outdir [X]      Output folder [auto] (default '')
   --force           Force overwriting existing output folder (default OFF)
   --prefix [X]      Filename output prefix [auto] (default '')
   --locustag [X]    Locus tag prefix (default 'PROKKA')
   --gffver [N]      GFF version (default '3')
   --addgenes        Add 'gene' features for each 'CDS' feature (default OFF)
   --centre [X]      Sequencing centre ID (default 'VBC')
 Organism details:
   --genus [X]       Genus name (will be used to aid annotation) (default 'Genus')
   --species [X]     Species name (default 'species')
   --strain [X]      Strain name (default 'strain')
 Annotations:
   --kingdom [X]     Annotation mode: Archaea|Bacteria|Viruses (default 'Bacteria')
   --gcode [N]       Genetic code / Translation table (default '11')
   --gram [X]        Gram: -/neg +/pos (default '')
   --usegenus        Use genus-specific BLAST databases (needs --genus) (default OFF)
   --proteins [X]    Fasta file of trusted proteins to first annotate from (default '')
 Computation:
   --fast            Fast mode - skip CDS /product searching (default OFF)
   --cpus [N]        Number of CPUs to use [0=all] (default '0')
   --mincontig [N]   Minimum contig size [NCBI needs 200] (default '200')
   --evalue [n.n]    Similarity e-value cut-off (default '1e-09')
   --coverage [n.n]  Similarity %id cut-off (otherwise /pseudo) (default '0')

Dependencies

   [7]GNU Parallel
           A shell tool for executing jobs in parallel using one or more
           computers O. Tange, GNU Parallel - The Command-Line Power Tool,
           ;login: The USENIX Magazine, Feb 2011:42-47.

   [8]BioPerl
           Used for input/output of various file formats Stajich et al, The
           Bioperl toolkit: Perl modules for the life sciences. Genome Res.
           2002 Oct;12(10):1611-8.

   [9]Aragorn
           Finds transfer RNA features (tRNA) Laslett D, Canback B. ARAGORN,
           a program to detect tRNA genes and tmRNA genes in nucleotide
           sequences. Nucleic Acids Res. 2004 Jan 2;32(1):11-6.

   [10]RNAmmer
           Finds ribosomal RNA features (rRNA) Lagesen K et al. RNAmmer:
           consistent and rapid annotation of ribosomal RNA genes. Nucleic
           Acids Res. 2007;35(9):3100-8.

   [11]Prodigal
           Finds protein-coding features (CDS) Hyatt D et al. Prodigal:
           prokaryotic gene recognition and translation initiation site
           identification. BMC Bioinformatics. 2010 Mar 8;11:119.

   [12]SignalP >= 4.0
           Finds signal peptide features in CDS (sig_peptide) Petersen TN et
           al. SignalP 4.0: discriminating signal peptides from transmembrane
           regions. Nat Methods. 2011 Sep 29;8(10):785-6.

   [13]BLAST+
           Used for similarity searching against protein sequence libraries
           Camacho C et al. BLAST+: architecture and applications. BMC
           Bioinformatics. 2009 Dec 15;10:421.

   [14]HMMER3
           Used for similarity searching against protein family profiles Finn
           RD et al. HMMER web server: interactive sequence similarity
           searching. Nucleic Acids Res. 2011 Jul;39(Web Server
           issue):W29-37.

Databases

  The Core Databases

   Prokka uses a variety of databases when trying to assign function to the
   predicted CDS features. It takes a hierarchial approach to make it fast. A
   small, core set of well characterized proteins are first searched using
   BLAST+. This combination of small database and fast search typically
   completes about 70% of the workload. Then a series of slower but more
   sensitive HMM databases are searched using HMMER3.

   The initial core databases are derived from UniProtKB; there is one per
   "kingdom" supported. To qualify for inclusion, a protein must be (1) from
   Bacteria (or Archaea or Viruses); (2) not be "Fragment" entries; and (3)
   have an evidence level ("PE") of 2 or lower, which corresponds to
   experimental mRNA or proteomics evidence.

  Making a Core Databases

   If you want to modify these core databases, the included script
   prokka-uniprot_to_fasta_db, along with the official uniprot_sprot.dat, can
   be used to generate a new database to put in /path/to/prokka/db/kingdom/.
   If you add new ones, the command prokka --listdb will show you whether it
   has been detected properly.

  The Genus Databases

   If you enable --usegenus and also provide a Genus via --genus then it will
   first use a BLAST database which is Genus specific. Prokka comes with a
   set of databases for the most common Bacterial genera; type prokka
   --listdb to see what they are.

  Adding a Genus Databases

   If you have a set of Genbank files and want to create a new Genus
   database, Prokka comes with a tool called prokka-genbank_to_fasta_db to
   help. For example, if you had four annotated "Coccus" genomes, you could
   do the following:

 % quokka-genbank_to_fasta_db Coccus1.gbk Coccus2.gbk Coccus3.gbk Coccus4.gbk > Coccus.faa
 % cd-hit -i Coccus.faa -o Coccus -T 0 -M 0 -g 1 -s 0.8 -c 0.9
 % rm -fv Coccus.faa Coccus.bak.clstr Coccus.clstr
 % makeblastdb -dbtype prot -in Coccus
 % mv Coccus.p* /path/to/prokka/db/genus/

  The HMM Databases

   Prokka comes with a bunch of HMM libraries for HMMER3. They are mostly
   Bacteria-specific. They are searched after the core and genus databases.
   You can add more simply by putting them in /path/to/prokka/db/hmm. Type
   prokka --listdb to confirm they are recognised.

  Database format

   Prokka understands two annotation tag formats, a plain one and a detailed
   one.

   The plain one is a standard FASTA-like line with the ID after the > sign,
   and the protein "/product" after the ID (the "description" part of the
   line):

 >SeqID product

   The detailed one consists of a special encoded three-part description
   line. The parts are the /EC_number, the /gene code, then the /product -
   and they are separated by a special "~~~" sequence:

 >SeqID EC_number~~~gene~~~product

   Here are some examples. Note that not all parts need to be present, but
   the "~~~" should still be there:

 >YP_492693.1 2.1.1.48~~~ermC~~~rRNA adenine N-6-methyltransferase
 MNEKNIKHSQNFITSKHNIDKIMTNIRLNEHDNIFEIGSGKGHFTLELVQRCNFVTAIEI
 DHKLCKTTENKLVDHDNFQVLNKDILQFKFPKNQSYKIFGNIPYNISTDIIRKIVF*

 >YP_492697.1 ~~~traB~~~transfer complex protein TraB
 MIKKFSLTTVYVAFLSIVLSNITLGAENPGPKIEQGLQQVQTFLTGLIVAVGICAGVWIV
 LKKLPGIDDPMVKNEMFRGVGMVLAGVAVGAALVWLVPWVYNLFQ*

 >YP_492694.1 ~~~~~~transposase
 MNYFRYKQFNKDVITVAVGYYLRYALSYRDISEILRGRGVNVHHSTVYRWVQEYAPILYQ
 QSINTAKNTLKGIECIYALYKKNRRSLQIYGFSPCHEISIMLAS*

   The same description lines apply to HMM models, except the "NAME" and
   "DESC" fields are used:

 NAME  PRK00001
 ACC   PRK00001
 DESC  2.1.1.48~~~ermC~~~rRNA adenine N-6-methyltransferase
 LENG  284

FAQ

   Where does the name "Prokka" come from?
           Prokka is a contraction of "prokaryotic annotation". It's also
           relatively unique within Google, and also rhymes with a native
           Australian marsupial called the [15]quokka.

   Can I annotate by eukaryote genome with Prokka?
           No. Prokka is specifically designed for Bacteria, Archaea and
           Viruses. It can't handle multi-exon gene models; I would recommend
           using [16]MAKER 2 for that purpose.

Still To Do

     * Do the parallel blasting/hmmering in batch mode instead of 1 sequence
       at a time.
     * Support a bacterial subset of [17]Rfam (riboswitches etc). Main issue
       is the high computational complexity of RNA profile searching using
       [18]Infernal.
     * Add the CLUSTERS "PHA" library to Viruses mode.
     * Option to include ribosomal binding sites (RBS) as features.
     * Add a "--ncbi" option to enable all NCBI-specific things.
     * Check input contigs for runs of Ns, and either complain, or split the
       file, or additionally create a .AGP scaffold file.
     * Allow running even if some dependencies are not installed.
     * Allow disabling of some dependencies even if they are installed. eg
       RNAmmer

Bugs

     * Probably.

Citation

   The manuscript is currently being prepared. If you use Prokka in your
   research before then, please cite: Prokka: Prokaryotic Genome Annotation
   System - http://vicbioinformatics.com/

Appendix A - The Canonical Bacterial Gene Model

        gene =================================================>
    promoter ===>
        mRNA       ===========================================>
         RBS         =>
         CDS            ================================>
 sig_peptide            ====>

References

   Visible links
   1. http://galaxyproject.org/
   2. http://www.bioinformatics.net.au/
   3. file:///db/sw/vbc/prokka/doc/prokka-manual.html#depends
   4. http://www.sanger.ac.uk/resources/software/artemis/
   5. http://www.broadinstitute.org/igv/
   6. http://www.ncbi.nlm.nih.gov/collab/FT/
   7. http://www.gnu.org/software/parallel/
   8. http://bioperl.org/
   9. http://130.235.46.10/ARAGORN/
  10. file:///db/sw/vbc/prokka/doc/
  11. http://prodigal.ornl.gov/
  12. http://www.cbs.dtu.dk/services/SignalP/
  13. ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/
  14. http://hmmer.janelia.org/software
  15. http://en.wikipedia.org/wiki/Quokka
  16. http://www.yandell-lab.org/software/maker.html
  17. file:///db/sw/vbc/prokka/doc/
  18. file:///db/sw/vbc/prokka/doc/
